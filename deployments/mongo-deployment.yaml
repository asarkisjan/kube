apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 250Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: mongo-pv-claim
  labels:
    app: kube-app
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Mi
---
apiVersion: v1
kind: Service
metadata:
  name: kube-app-mongo
  labels:
    app: kube-app
spec:
  ports:
    - port: 27017
  selector:
    app: kube-app
    tier: mongo
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-app-mongo
  labels:
    app: kube-app
spec:
  selector:
    matchLabels:
      app: kube-app
      tier: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kube-app
        tier: mongo
    spec:
      containers:
      - image: mongo:4.4.3
        name: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME 
          valueFrom:               
            secretKeyRef:
              name: mongo-db-secret
              key: rootuser
        - name: MONGO_INITDB_ROOT_PASSWORD 
          valueFrom:               
            secretKeyRef:
              name: mongo-db-secret
              key: rootpassword
        - name: MONGO_INITDB_DATABASE 
          valueFrom:               
            secretKeyRef:
              name: mongo-db-secret
              key: database
        ports:
        - containerPort: 27017        
          name: mongo
        volumeMounts:
        - name: mongo-persistent-storage  
          mountPath: /data/db
        - name: mongodb-scripts
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        - name: mongo-db-secret
          mountPath: /etc/mongo-db-secret
          readOnly: true
      volumes:                       
      - name: mongo-persistent-storage
        persistentVolumeClaim:
          claimName: mongo-pv-claim
      - name: mongo-db-secret
        secret:
          secretName: mongo-db-secret
          items:
          - key: user
            path: MONGO_USERNAME
            mode: 0444
          - key: password
            path: MONGO_PASSWORD
            mode: 0444
          - key: database
            path: MONGO_DATABASE
            mode: 0444
      - name: mongodb-scripts
        configMap:
          name: monogodb-config
          items:
          - key: init-mongo.js
            path: init-mongo.js
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monogodb-config
data:
  mongo.conf: |
    storage:
      dbPath: /data/db
  init-mongo.js: |
    db.createUser(
        {
            user: cat('/etc/mongo-db-secret/MONGO_USERNAME'),
            pwd: cat('/etc/mongo-db-secret/MONGO_PASSWORD'),
            roles:[
                {
                    role: "readWrite",
                    db:   cat('/etc/mongo-db-secret/MONGO_DATABASE')
                }
            ]
        }
    );
