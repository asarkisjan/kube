version: '3.7'

services:

  app-client:
    build:
      context: kube-app 
      dockerfile: Dockerfile
    ports:
      - "3000:80" 
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend  

  app-server:
    build:
      context: kube-server 
      dockerfile: Dockerfile
    ports:
      - "8080:8080" 
    restart: always
    depends_on: 
      - db
    environment:
      SPRING_DATA_MONGODB_HOST: db
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_USERNAME: user
      SPRING_DATA_MONGODB_PASSWORD: pwd
      SPRING_DATA_MONGODB_DATABASE: kube_db

    networks: 
      - backend
      - frontend

  db:
    image: mongo:4.4.3
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: kube_db
    ports:
      - 27017:27017
    volumes:
      - db_mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - backend 

  mongo-express:
    image: mongo-express
    environment:
        - ME_CONFIG_MONGODB_SERVER=db
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
        - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
        - ME_CONFIG_MONGODB_ADMINUSERNAME=root
        - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpassword
        - ME_CONFIG_BASICAUTH_USERNAME=dev
        - ME_CONFIG_BASICAUTH_PASSWORD=dev
    depends_on:
        - db
    ports:
      - "8081:8081"
    networks:
      - backend 

volumes:
  db_mongo_data:

networks:
  backend:
  frontend:  